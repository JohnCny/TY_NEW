<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cardpay.pccredit.jnpad.dao.JnpadRiskCustomerCollectionDao">


<resultMap id="CollectionFormResultMap"
		type="com.cardpay.pccredit.riskControl.web.RiskCustomerCollectionPlanForm">
		<result property="createWay" column="create_way"/>
		<result property="customerId" column="CUSTOMER_ID" />
		<result property="chineseName" column="CHINESE_NAME" />
		<result property="productId" column="PRODUCT_ID" />
		<result property="productName" column="PRODUCT_NAME" />
		<result property="implementationObjective" column="IMPLEMENTATION_OBJECTIVE" />
		<result property="endResult" column="END_RESULT" />
		<result property="collectionTime" column="COLLECTION_TIME" />
		<result property="collectionMethod" column="COLLECTION_METHOD" />
		<result property="collectionPromiseDate" column="COLLECTION_PROMISE_DATE" />
		<result property="collectionEndtime" column="COLLECTION_ENDTIME" />
		<result property="collectionAmount" column="COLLECTION_AMOUNT" />
		<result property="userName" column="DISPLAY_NAME"/>
		<result property="size" column="countAction"/>
		<result property="created_time" column="CREATED_TIME"/>
		<result property="id" column="id"/>
		<result property="customerManagerId" column="CUSTOMER_MANAGER_ID"/>
		<result property="hkje" column="COLLECTION_AMOUNT"/>
		<result property="crhksj" column="COLLECTION_PROMISE_DATE"/>
	</resultMap>
	
		<resultMap id="ResultMap" type="com.cardpay.pccredit.riskControl.model.RiskCustomer">
		<result property="id" column="id" />
		<result property="customerId" column="customer_id" />
		<result property="riskLevel" column="risk_level" />
		<result property="riskCreateType" column="risk_create_type" />
		<result property="status" column="status" />
		<result property="refuseReason" column="refuse_reason" />
		<result property="reportedIdManager" column="reported_id_manager" />
		<result property="customerName" column="customerName" />
		<result property="cardType" column="cardType" />
		<result property="cardId" column="cardId" />
		<result property="riskDes" column="risk_des" />
		<result property="numRisk" column="numRisk" />
		<result property="riskAttribute" column="risk_attribute" />
		<result property="riskDescription" column="riskDescription" />
		<result property="maxRiskLevel" column="maxRiskLevel" />
		<result property="customerId" column="customerId" />
		<result property="productName" column="productName" />
	</resultMap>
	
	<!-- 	<insert id="InsertCs" resultType="int">
	insert into COLLECTION_PLAN (ID,CREATE_WAY,CUSTOMER_ID,PRODUCT_ID,)
	</select> -->
		
		
	<select id="findCountByFilter" resultType="int"
		parameterType="com.cardpay.pccredit.riskControl.filter.RiskCustomerCollectionPlanFilter">
		select
		count(*)
		from (
		SELECT
		c.*
		FROM
		COLLECTION_PLAN c
		LEFT JOIN
		BASIC_CUSTOMER_INFORMATION i ON c.customer_id = i.ID
		where i.user_id=#{customerManagerId})
	</select>
	
		<select id="findRiskCustomerCollectionPlans" resultMap="CollectionFormResultMap">
					select 
					c.COLLECTION_AMOUNT as hkje,
					c.END_RESULT as endResult,
					c.ID as id,
					c.IMPLEMENTATION_OBJECTIVE as implementationObjective ,
					c.COLLECTION_TIME as collectionTime,
					c.COLLECTION_METHOD as collectionMethod,
					c.CREATED_TIME as created_time,
					c.COLLECTION_ENDTIME as collectionEndtime,
					b.CHINESE_NAME as chineseName,
					c.COLLECTION_PROMISE_DATE as crhksj
					from 
					COLLECTION_PLAN c,
					BASIC_CUSTOMER_INFORMATION b
					where  b.user_id=c.CUSTOMER_MANAGER_ID
					and c.customer_id=b.id
					and c.CUSTOMER_MANAGER_ID=#{customerManagerId}
	</select>
	
	
<select id="findRiskCustomerCollectionPlanById" resultMap="CollectionFormResultMap">
		SELECT * FROM
		(SELECT
		c.*,
		P.PRODUCT_NAME,
		i.CHINESE_NAME
		FROM
		COLLECTION_PLAN c
		LEFT JOIN
		PRODUCT_ATTRIBUTE P ON c.product_id = P.ID
		LEFT JOIN
		BASIC_CUSTOMER_INFORMATION i ON c.customer_id = i.ID
		WHERE C.ID=#{id})
	</select>
	
	
	<select id="findRiskViewSubCollectionPlansCountByFilter" resultType="int">
		SELECT
		count(*)
		FROM
		COLLECTION_PLAN c
		LEFT JOIN
		BASIC_CUSTOMER_INFORMATION i ON c.customer_id = i.ID
		where i.user_id in
		<foreach collection="customerManagerId" index="index" item="item" open="(" separator="," close=")">
		     #{item.userId}
		</foreach>
	</select>
	
	
	<select id="findRiskCustomersByFilter" resultMap="ResultMap" 
			parameterType="com.cardpay.pccredit.riskControl.filter.RiskCustomerFilter">
		
			SELECT ROW_.*,ROWNUM ROWNUM_
				FROM (
					SELECT risk.*,
							customer.chinese_name as customerName,
							customer.card_type as cardType,
							customer.card_id as cardId,
							sysuser.display_name as reportedManager,
							p.PRODUCT_NAME as productName
					  FROM basic_customer_information customer
					 INNER JOIN risk_list risk
					    ON customer.id = risk.customer_id
					 INNER JOIN sys_user sysuser
					    ON sysuser.id = risk.reported_id_manager
					 LEFT  JOIN product_attribute p on p.id = risk.PRODUCT_ID
					  WHERE 1=1 
					 <if test="reportedIdManager != null and reportedIdManager != '' ">
						AND risk.reported_id_manager=#{reportedIdManager}
					 </if>
					 <if test="custManagerId != null and custManagerId != '' ">
						AND risk.CUST_MANAGER_ID=#{custManagerId}
					 </if>
					 <if test="status != null and status != '' ">
						AND risk.status=#{status}
					 </if>
					 <if test="role != null and role != '' and role == 'manager'">
					 </if>
					 <if test="role != null and role != '' and role == 'cardcenter'">
						AND (risk.status='REPORTED_CARDCENTER' or risk.status='CONFIRMED_CARDCENTER' or risk.status='REJECT_CARDCENTER')
					 </if>
					 <if test="riskCreateType != null and riskCreateType != ''">
						AND risk.risk_create_type=#{riskCreateType}
					 </if>
					 <if test="customerName != null and customerName != '' ">
						AND customer.chinese_name like '%${customerName}%'
					 </if>
					 <if test="cardType != null and cardType != '' ">
						AND customer.card_type=#{cardType}
					 </if>
					 <if test="cardId != null and cardId != '' ">
						AND customer.card_id like '%${cardId}%'
					 </if>
		 							 order by risk.CREATED_TIME desc
					 
							) ROW_
					
	</select>
	
	<!-- 得到当前客户经理的逾期客户 -->
		<select id="getCustomerIdAndName" resultType="com.cardpay.pccredit.system.model.Dict">
		<!-- select 
		t.id as TypeCode,t.chineseName as TypeName 
		from 
		(select b.id as id,b.chinese_name as chineseName
		from 
		basic_customer_information b where b.user_id=#{userId})t
		inner join
		(select distinct(customer_id) as customerId 
		from 
		customer_overdue)c
		on t.id=c.customerId -->
	<!-- 	      	select 
    		t.id as TypeCode,t.chineseName as TypeName , c.sjmoney as yqMoney,t.tel as tel,t.cardId as cardId,cct.productId as productId,
    		cct.actual_quote as actual_quote
    	from 
    	
	    ((select b.TELEPHONE as tel,b.CARD_ID as cardId, b.id as id,b.chinese_name as chineseName,b.ty_customer_id as tCustomerId from 
	    basic_customer_information b where b.user_id=#{userId})t
       inner join
	     (select ct.PRODUCT_ID as productId,ct.ACTUAL_QUOTE as actual_quote,ct.customer_id as customerId from 
	    CUSTOMER_APPLICATION_INFO ct)cct   
	      on  cct.customerId=t.tCustomerId)
       inner join
	    (select distinct(CUSTID) as customerId,MONEY as sjmoney from t_mibusidata_view where (DELAYINTERESTDAYS <![CDATA[ >  ]]> 0 or DELAYAMTDAYS <![CDATA[ >  ]]> 0 ))c
	   on t.tCustomerId = c.customerId -->
	 select distinct(m.ywbh) as qq,m.DLAYDT as bankCode,
	 		b.id as TypeCode,b.chinese_name as TypeName,b.TELEPHONE as tel,b.card_id as cardId ,t.dkye as dkye,t.bnqx as bnqx,t.bwqx as bwqx,m.REQLMT as actual_quote
	  from  TY_REPAY_YEHZ t ,mibusidata m,BASIC_CUSTOMER_INFORMATION b
	  where m.ywbh=t.ywbh and b.ty_customer_id=m.id
	  and  (( m.DELAYINTERESTDAYS  not in ('0') and  m.DELAYINTERESTDAYS is not null)
   or( m.DELAYAMTDAYS  not in ('0') and m.DELAYAMTDAYS is not null))
	and b.user_id=#{userId}
	   
	</select>
	<!-- 得到当前客户经理的逾期客户数量 -->
		<select id="getCustomerIdAndNameCount" resultType="int">
		select 
    		count(*)
    	from 
	    (select b.id as id,b.chinese_name as chineseName,b.ty_customer_id as tCustomerId from 
	    basic_customer_information b where b.user_id=#{userId})t
	    inner join
	    (select distinct(CUSTID) as customerId from t_mibusidata_view where (DELAYINTERESTDAYS <![CDATA[ >  ]]> 0 or DELAYAMTDAYS <![CDATA[ >  ]]> 0 ))c
	    on t.tCustomerId = c.customerId
	</select>
	<!-- 添加催收计划 -->
	<insert id="InsertCs" parameterType="int">
	insert into COLLECTION_PLAN (ID,CUSTOMER_ID,IMPLEMENTATION_OBJECTIVE,COLLECTION_TIME,COLLECTION_METHOD,CUSTOMER_MANAGER_ID,CREATED_TIME,END_RESULT,COLLECTION_ENDTIME,TIME)
	values(#{id},#{customerId},#{implementationObjective},#{collectionTime},#{collectionMethod},#{customerManagerId},#{created_time},#{endResult},#{collectionEndtime},#{time})
	</insert>
	
	<update id='updateCs' parameterType="int">
	update  COLLECTION_PLAN  set COLLECTION_AMOUNT=#{hkje},COLLECTION_PROMISE_DATE=#{crhksj},END_RESULT=#{endResult}
	where ID=#{id}
	</update>
	
	<!-- 查询是否添加催收计划 -->
		<select id="selectOrCs" resultType="int">
		select 
    		count(*)
    	from 
	    COLLECTION_PLAN
	    where customer_id=#{customerId} and TIME=#{time}
	</select>
	</mapper>